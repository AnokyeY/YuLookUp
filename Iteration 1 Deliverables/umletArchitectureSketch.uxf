<diagram program="umletino" version="15.0.0"><zoom_level>7</zoom_level><help_text>Space for diagram notes</help_text><element><id>UMLClass</id><coordinates><x>987</x><y>168</y><w>280</w><h>168</h></coordinates><panel_attributes>Course
--
- code: String
- name: String
- description: String
- prerequisites: ArrayList&lt;String&gt;
--
+ Course(code: String, name: String, description: String): constructor
+ Course(code: String, name: String, description: String)
+ getCode(): String
+ getName(): String
+ getDescription(): String
+ getDescriptionWithoutPrereq(): String
+ getPrerequisites(): ArrayList&lt;String&gt;
+ getCoursePrerequisites(): ArrayList&lt;Course&gt;
+ toString(): String</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>994</x><y>427</y><w>259</w><h>266</h></coordinates><panel_attributes>Major
--
- courses: LinkedHashMap&lt;String, Course&gt;
- name: String
- civilCourses: String[]
- computerCourses: String[]
- electricalCourses: String[]
- mechanicalCourses: String[]
- softwareCourses: String[]
- spaceCourses: String[]
- major: LinkedHashMap&lt;Integer, ArrayList&lt;Course&gt;&gt;
- civilMajor: LinkedHashMap&lt;Integer, ArrayList&lt;Course&gt;&gt;
- computerMajor: LinkedHashMap&lt;Integer, ArrayList&lt;Course&gt;&gt;
- electricalMajor: LinkedHashMap&lt;Integer, ArrayList&lt;Course&gt;&gt;
- mechanicalMajor: LinkedHashMap&lt;Integer, ArrayList&lt;Course&gt;&gt;
- softwareMajor: LinkedHashMap&lt;Integer, ArrayList&lt;Course&gt;&gt;
- spaceMajor: LinkedHashMap&lt;Integer, ArrayList&lt;Course&gt;&gt;
--
+ Major(name: String): constructor
+ setMajor(): LinkedHashMap&lt;Integer, ArrayList&lt;Course&gt;&gt;
+ getMajor(): LinkedHashMap&lt;Integer, ArrayList&lt;Course&gt;&gt;
+ setAllCourses(list: ArrayList&lt;Course&gt;): void
+ getName(): String
+ getShortCode(): String
+ getCourseLevel(): int
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1533</x><y>427</y><w>273</w><h>77</h></coordinates><panel_attributes>MainScraper
--
_+ momentaryPause(val: int): void_
_+ navigateToCourseList(): void_
_+ getCourseList(): ArrayList&lt;Course&gt;_
_+ findInstancesOf(target: Char, sample: String): ArrayList&lt;Integer&gt;_
_ + setPrerequisites(): ArrayList&lt;String&gt;_</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>406</x><y>175</y><w>217</w><h>175</h></coordinates><panel_attributes>courseSearchController
--
+ userSearch: TextField
+ courseCodeLabel: Label
+ coiurseNameLabel: Label
+ courseDescriptionLabel: Label
+ resultsList: ListView&lt;Course&gt;
+ majorsListViewButton: Button
+ gpaButton: Button
- stage: Stage
- scene: Scene
-root: Parent
--
+ setUserSearch(s: String): void
+ handleMajorsListViewButton(e: ActionEvent): void
+ handleSearchClick(e: ActionEvent): void
+ getGPACalculatorScene(event: ActionEvent): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>385</x><y>371</y><w>280</w><h>217</h></coordinates><panel_attributes>courseTableGUIController
--
+ major: Major
+ broder: BorderPane
+ root: Parent
+ stage: Stage
+ scene: Scene
+ buttonsList: HashMap&lt;String, Button&gt;
--
+ getMajorsListScene(): Scene
+ setCourseColumnsView(): void
+ courseDescription(course: Course): void
+ yearCol(year: int, buttons: HashMap&lt;String, Button&gt;): VBox
+ showPrerequisites(btn: Button, course: Course): void
+ clearPrerequisites(): void
+ createButton(text: String, width: Double, height: Double): Button
+ setCourses(): void
+ majorsBar(): HBox
+ getShortCode(course: Course): String
+ getCredit(course: Course): double</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>399</x><y>609</y><w>245</w><h>315</h></coordinates><panel_attributes>gpaCalculatorController
--
- textFieldGPA: TextField
- textFieldCredits: TextField
- choiceBox1: ChoiceBox&lt;String&gt;
- choiceBox2: ChoiceBox&lt;String&gt;
- choiceBox3: ChoiceBox&lt;String&gt;
- choiceBox4: ChoiceBox&lt;String&gt;
- choiceBox5: ChoiceBox&lt;String&gt;
- textFieldGPV1: TextField
- textFieldGPV2: TextField
- textFieldGPV3: TextField
- textFieldGPV4: TextField
- textFieldGPV5: TextField
- textFieldCW1: TextField
- textFieldCW2: TextField
- textFieldCW3: TextField
- textFieldCW4: TextField
- textFieldCW5: TextField
- gradeToNumber: Map&lt;ChoiceBox&lt;String&gt;, TextField&gt;
- creditWeightFields: ArrayList&lt;TextField&gt;
- gradePointFields: ArrayList&lt;TextField&gt;
- root: Parent
- stage: Stage
- scene: Scene
--
+ initialize(location: URL, resources: ResourceBundle): void
+ GradeToGradePoint(event: ActionEvent): void
+ CalculateGPA(event: ActionEvent): void
+ getSearchResultsScene(event: ActionEvent): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1918</x><y>413</y><w>154</w><h>119</h></coordinates><panel_attributes>Stub Database (courses.json)
_umletcode=
//cloud

//DrawConfig Parameters (bg: bgColor?, fg: fgColor?, lt: lineType?, lw: lineWidth?, transparency: transparencyValue?)
var cloudConfig = {fg: '#00BFFF', lt: '-', lw: 2}

//Parameters (x, y, width, height, start, extent, open, drawConfig?)
drawArc(60,70,50,50,30,130,true, cloudConfig)
drawArc(36,83,49,50,70,100,true, cloudConfig)
drawArc(73,83,50,30,-100,180,true, cloudConfig)
drawArc(36,84,60,40,180,180,true, cloudConfig)
var innerCloudConfig= {fg: '#87CEFA', lt: '-', lw: 2}
drawArc(45,87,40,30,170,180,true, innerCloudConfig)
drawArc(75,79,20,20,30,130,true, innerCloudConfig)

//server
//Parameters (x, y, width, height, radius, drawConfig?)
drawRectangleRound(140,50,60,90,5, {bg: 'gray', fg: 'black', lt: '-', lw: 2})

//Parameters (x, y, width, height, drawConfig?)
drawRectangle(150,60,40,8)
drawRectangle(150,80,40,8)
drawRectangle(150,100,40,8)

//Parameters (x, y, radius, drawConfig?)
drawCircle(170,125,5)

</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1260</x><y>231</y><w>287</w><h>238</h></coordinates><panel_attributes>lt=-&gt;
request CourseList</panel_attributes><additional_attributes>10;10;390;320</additional_attributes></element><element><id>Relation</id><coordinates><x>1799</x><y>455</y><w>133</w><h>35</h></coordinates><panel_attributes>lt=&lt;-
Retrieve course data
</panel_attributes><additional_attributes>170;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>1120</x><y>329</y><w>28</w><h>112</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>20;10;10;140</additional_attributes></element><element><id>UMLClass</id><coordinates><x>994</x><y>749</y><w>301</w><h>42</h></coordinates><panel_attributes>CourseSearchMethods
--
_+ searchCourse(search: String, directory: ArrayList&lt;Course&gt; directory)_</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1141</x><y>308</y><w>175</w><h>455</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>180;10;220;10;230;590;10;590;10;630</additional_attributes></element><element><id>Relation</id><coordinates><x>616</x><y>238</y><w>399</w><h>546</h></coordinates><panel_attributes>lt=&lt;&lt;-
request courses from</panel_attributes><additional_attributes>540;760;440;760;430;10;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>21</x><y>434</y><w>210</w><h>119</h></coordinates><panel_attributes>mainController
--
+ searchBar: TextField
+ homeSearchButton: Button
- stage: Stage
- scene: Scene
- root: Parent
--
+ start(stage: Stage): void
+ getSearchResultsScene(event: ActionEvent): void
+ main(args: String[]): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>224</x><y>245</y><w>196</w><h>259</h></coordinates><panel_attributes>lt=-
displays
m1=1
m2=1</panel_attributes><additional_attributes>10;340;60;340;60;10;260;10</additional_attributes></element><element><id>Relation</id><coordinates><x>224</x><y>483</y><w>175</w><h>35</h></coordinates><panel_attributes>lt=-
m1=1
displays
m2=1
</panel_attributes><additional_attributes>10;20;230;20</additional_attributes></element><element><id>Relation</id><coordinates><x>224</x><y>504</y><w>189</w><h>294</h></coordinates><panel_attributes>lt=-
m1= 1
displays
m2=1</panel_attributes><additional_attributes>10;10;70;10;80;390;250;390</additional_attributes></element><element><id>UMLGeneric</id><coordinates><x>0</x><y>77</y><w>728</w><h>931</h></coordinates><panel_attributes>Presentation Architecture Component (GUI)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLGeneric</id><coordinates><x>854</x><y>77</y><w>504</w><h>931</h></coordinates><panel_attributes>Business Logic Architecture Component</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLGeneric</id><coordinates><x>1491</x><y>77</y><w>329</w><h>910</h></coordinates><panel_attributes>Persistence Architecture Component</panel_attributes><additional_attributes></additional_attributes></element></diagram>